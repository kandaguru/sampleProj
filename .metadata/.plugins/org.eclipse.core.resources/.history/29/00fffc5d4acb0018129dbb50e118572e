package com.uoa.qa.minc.testcase;

import java.io.IOException;

import org.openqa.selenium.interactions.Actions;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import com.uoa.minc.page.CurrentOrderPage;
import com.uoa.minc.page.HomePage;
import com.uoa.minc.page.ItemCataloguePage;
import com.uoa.minc.page.LoginPage;
import com.uoa.qa.minc.base.TestBase;
import com.uoa.qa.minc.utilities.TestUtil;

public class MincAddToCartTest extends TestBase {

	public MincAddToCartTest() throws IOException {
		super();
	}

	LoginPage loginPage;
	HomePage homePage;
	CurrentOrderPage currentOrderPage;
	ItemCataloguePage itemCataloguePage;

	@BeforeClass
	public void setUp() throws IOException {
		intialize(); // driver instance initialization

		loginPage = new LoginPage();

		homePage = loginPage.login();

	}

	@Test(priority = 1)
	public void switch_To_window_test() throws IOException, InterruptedException {

		currentOrderPage = homePage.clickMincLink(); 		// clicking on the Winc. (formerly staples ) Link
		
		Thread.sleep(1000L);								//static wait

		TestUtil.switchTowindow();							 // switching to child pop-up tab/window

	}

	@Test(priority = 2, dataProvider = "getdata")
	public void add_To_Cart_test(String itemName, String numberOfItemsString) throws IOException {

		double numberOfItems = Double.parseDouble(numberOfItemsString);

		itemCataloguePage = currentOrderPage.searchItem(itemName); // enter choice of item

		itemCataloguePage.selectItems(numberOfItems, itemName);

	}

	@Test(priority = 3)
	public void complete_Order_test() throws InterruptedException {

		itemCataloguePage.CheckOut();

	}

	@DataProvider
	public Object[][] getdata() {

		Object data[][] = new Object[3][2];

		data[0][0] = prop.getProperty("itemname1");
		data[0][1] = prop.getProperty("numberofitems1");

		data[1][0] = prop.getProperty("itemname2");
		data[1][1] = prop.getProperty("numberofitems2");

		data[2][0] = prop.getProperty("itemname3");
		data[2][1] = prop.getProperty("numberofitems3");

		return data;

	}

	@AfterClass
	public void tearDown() {

		driver.quit();
		driver = null;
	}

}
